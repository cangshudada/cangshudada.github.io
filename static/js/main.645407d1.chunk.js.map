{"version":3,"sources":["store/reducer/home/index.ts","store/reducer/navMenu/index.ts","store/reducer/index.ts","store/actionType/index.ts","store/index.ts","components/topNav/index.tsx","store/actions/navMenu/index.ts","components/banner/profile/index.tsx","components/banner/contactIcon/index.tsx","components/banner/index.tsx","components/content/aboutMe/index.tsx","components/content/project/index.tsx","components/content/index.tsx","components/backTop/index.tsx","views/home.tsx","utils/index.ts","index.tsx"],"names":["homeReducer","defaultState","name","id","isActive","reducers","state","count","action","type","navMenuReducer","newState","JSON","parse","stringify","forEach","item","index","rootReducers","combineReducers","store","createStore","reducer","connect","navMenuList","dispatch","changeNavMenu","props","isShow","className","list","map","key","onClick","genMenu","Profile","isColorWhite","useState","isProfileShow","setProfileShow","useEffect","ContactIcon","src","href","icon","target","placement","title","info","Banner","skillList","AboutMe","Project","Content","BackTop","CSSTransition","in","timeout","classNames","unmountOnExit","App","home","useRef","isBackTopShow","setBackTopShow","ref","onScrollCapture","current","scrollTop","container","position","scrollToptimer","setInterval","top","speed","clearInterval","scrollAnimate","ReactDOM","render","document","getElementById"],"mappings":"iRAuBeA,ICTTC,EAAe,CACnB,CACEC,KAAM,eACNC,GAAI,OACJC,UAAU,GAEZ,CACEF,KAAM,eACNC,GAAI,SACJC,UAAU,GAEZ,CACEF,KAAM,eACNC,GAAI,UACJC,UAAU,GAEZ,CACEF,KAAM,eACNC,GAAI,aACJC,UAAU,GAEZ,CACEF,KAAM,qBACNC,GAAI,UACJC,UAAU,IA0BCJ,IC1DTK,EAAW,CACfL,YFGF,WAEqC,IAFhBM,EAEe,uDAFM,CACxCC,MAAO,GACNC,EAAiC,uCAK9B,OAHIA,EAAOC,KAGJH,GETXI,eDkCF,WAAuG,IAAlFJ,EAAiF,uDAAvDL,EAAcO,EAAyC,uCAEpG,OAAQA,EAAOC,MAEb,IE9C8B,cF+C5B,IAAME,EAA6BC,KAAKC,MAAMD,KAAKE,UAAUR,IAO7D,OANAK,EAASI,SAAQ,SAACC,EAAMC,GACtBD,EAAKZ,UAAW,EACZa,IAAUT,EAAOS,QACnBD,EAAKZ,UAAW,MAGbO,EAGT,QACE,OAAOL,KC7CEY,EAFMC,YAAgBd,GEHtBe,EAFDC,YAAYC,G,oBCyB1B,IAaeC,eC3Ba,SAACjB,GAAD,MAAiC,CAC3DkB,YAAalB,EAAMI,mBAGU,SAACe,GAAD,MAC7B,CACEC,cAAe,SAACT,GACdQ,EAAS,CACPhB,KHzB0B,cG0B1BQ,cDkBOM,EAbA,SAACI,GAAgC,IACtCH,EAAuCG,EAAvCH,YAAaE,EAA0BC,EAA1BD,cAAeE,EAAWD,EAAXC,OACpC,OAAO,yBAAKzB,GAAG,UAAU0B,UAAWD,EAAS,GAAK,UAChD,yBAAKC,UAAU,gBACf,yBAAKA,UAAU,YAnBnB,SAAiBC,EAAwBJ,GAEvC,OAAOI,EAAKC,KAAI,SAACf,EAAMC,GAAP,OACd,yBACEY,UAAS,eAAUb,EAAKZ,SAAW,gBAAkB,IACrD4B,IAAKf,EACLgB,QAAS,WACPP,EAAcT,KAGfD,EAAKd,SAWJgC,CAAQV,EAAaE,QEJdS,G,YA1BC,SAACR,GAA+B,IAEtCS,EAAiBT,EAAjBS,aAFqC,EAILC,oBAAS,GAJJ,mBAItCC,EAJsC,KAIvBC,EAJuB,KAU7C,OAJAC,qBAAU,WACRD,GAAe,KACd,IAEI,6BAASpC,GAAG,UAAU0B,UAAS,UAAKS,EAAgB,GAAK,kBAC9D,yBAAKT,UAAU,kBACb,yBACEA,UAAU,QACVI,QAAS,WAAQM,GAAgBD,MAEnC,yBAAKT,UAAU,YAEjB,yBAAKA,UAAS,sBAAiBO,EAAe,aAAe,KAC3D,yBAAKP,UAAU,QAAf,SACA,yBAAKA,UAAU,SAAf,oC,SCGSY,G,MArBK,SAACd,GAA+B,IAC1CG,EAASH,EAATG,KACR,OAAO,yBAAKD,UAAU,cAElBC,EAAKC,KAAI,SAACf,EAAKC,GACb,OAAID,EAAK0B,IACA,uBAAGC,KAAM3B,EAAK0B,IACXV,IAAKf,EACLY,UAAS,uBAAkBb,EAAK4B,MAChCC,OAAO,WAGV,kBAAC,IAAD,CAASb,IAAKf,EAAO6B,UAAU,MAAMC,MAAO/B,EAAKgC,MACtD,yBAAKnB,UAAS,uBAAkBb,EAAK4B,eCiClCK,EAvCA,SAACtB,GAA+B,IAErCS,EAAiBT,EAAjBS,aA8BR,OAAO,yBAAKjC,GAAG,UACb,kBAAC,EAAD,CAASiC,aAAcA,IACvB,kBAAC,EAAD,CAAaN,KA9Ba,CAC1B,CACE5B,KAAM,SACN0C,KAAM,cACNF,IAAK,kCAEP,CACExC,KAAM,eACN0C,KAAM,aACNI,KAAM,uBAER,CACE9C,KAAM,eACN0C,KAAM,aACNI,KAAM,eAER,CACE9C,KAAM,KACN0C,KAAM,UACNI,KAAM,aAER,CACE9C,KAAM,SACN0C,KAAM,cACNI,KAAM,qBAIH,iBCvCHE,G,cAAqB,CACzB,CACEhD,KAAM,aACN2B,UAAW,cACV,CACD3B,KAAM,QACN2B,UAAW,SACV,CACD3B,KAAM,QACN2B,UAAW,SACV,CACD3B,KAAM,MACN2B,UAAW,OACV,CACD3B,KAAM,OACN2B,UAAW,QACV,CACD3B,KAAM,WACN2B,UAAW,YACV,CACD3B,KAAM,qBACN2B,UAAW,SACV,CACD3B,KAAM,UACN2B,UAAW,aA2BAsB,EAvBC,WAEd,OAAO,yBAAKhD,GAAG,WACb,yBAAK0B,UAAU,QAAf,sBACA,yBAAKA,UAAU,SAAf,YACA,yBAAKA,UAAU,WACb,8CACA,gEACA,2CAEF,yBAAKA,UAAU,aAEXqB,EAAUnB,KAAI,SAACf,EAAMC,GAAP,OACZ,yBAAKe,IAAKf,GACR,0BAAMY,UAAS,oBAAeb,EAAKa,aACnC,8BAAOb,EAAKd,aChCTkD,G,OAjBC,WACd,OAAO,uBAAKjD,GAAG,WACb,uBAAK0B,UAAU,SAAf,sBACA,uBAAKA,UAAU,WACb,uBAAKA,UAAU,UAAf,WACA,uBAAKA,UAAU,eACb,6BACA,6BACA,8BAEF,uBAAKA,UAAU,4BCCNwB,EARC,WAEd,OAAO,yBAAKlD,GAAG,WACb,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,kBCeWmD,EAhBC,SAAC3B,GAAkB,IACzBC,EAAoBD,EAApBC,OAAQK,EAAYN,EAAZM,QAChB,OAAO,kBAACsB,EAAA,EAAD,CACLC,GAAI5B,EACJ6B,QAAS,IACTC,WAAW,OACXC,eAAa,GAEb,yBACExD,GAAG,WACH8B,QAASA,GAFX,QC+BW2B,EAvCH,WACV,IAAMC,EAAOC,iBAAyB,MADT,EAEWzB,oBAAS,GAFpB,mBAEtB0B,EAFsB,KAEPC,EAFO,KAuB7B,OAAO,yBAAK7D,GAAG,OAAO8D,IAAKJ,EAAMK,gBAAiB,WAhB5CL,EAAKM,UACHN,EAAKM,QAAQC,UAAY,IAC3BJ,GAAe,GAEfA,GAAe,MAcnB,kBAAC,EAAD,CACEpC,OAAQmC,EACR9B,QAVY,WACV4B,EAAKM,SC3BgB,SAACE,EAA6BC,GAEzD,IAAMC,EAAiBC,aAAY,WACjC,IAAMC,EAAMJ,EAAUD,UAChBM,EAAQD,EAAM,EAChBA,IAAQH,EACVD,EAAUD,WAAaM,EAEvBC,cAAcJ,KAEf,IDkBCK,CAAcf,EAAKM,QAAS,MAW9B,kBAAC,EAAD,CAAQvC,QAASmC,IAEjB,kBAAC,EAAD,CAAQ3B,cAAe2B,IAEvB,kBAAC,EAAD,Q,cEnCJc,IAASC,OACP,kBAAC,IAAD,CAAU1D,MAAOA,GACf,kBAAC,EAAD,OACW2D,SAASC,eAAe,U","file":"static/js/main.645407d1.chunk.js","sourcesContent":["import { ModifyAction } from '../../actions/navMenu';\r\n\r\nexport interface HomeReducer {\r\n  count: number\r\n}\r\n\r\ninterface HomeAction {\r\n  type: ModifyAction\r\n}\r\n\r\nfunction homeReducer(state: HomeReducer = {\r\n  count: 1\r\n}, action: HomeAction): HomeReducer {\r\n\r\n  switch (action.type) {\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default homeReducer;","import { ModifyAction } from '../../actions/navMenu';\r\nimport { CHANGE_MENU } from '../../actionType';\r\n\r\nexport interface NavMenuReducer {\r\n  name: string,\r\n  id: string,\r\n  isActive: boolean\r\n}\r\n\r\ninterface NavMenuAction {\r\n  type: ModifyAction,\r\n  index: number\r\n}\r\n\r\nconst defaultState = [\r\n  {\r\n    name: '首页',\r\n    id: 'home',\r\n    isActive: true\r\n  },\r\n  {\r\n    name: '个人',\r\n    id: 'person',\r\n    isActive: false\r\n  },\r\n  {\r\n    name: '项目',\r\n    id: 'project',\r\n    isActive: false\r\n  },\r\n  {\r\n    name: '经历',\r\n    id: 'experience',\r\n    isActive: false\r\n  },\r\n  {\r\n    name: '联系我',\r\n    id: 'contact',\r\n    isActive: false\r\n  },\r\n]\r\n\r\nfunction homeReducer(state: NavMenuReducer[] = defaultState, action: NavMenuAction): NavMenuReducer[] {\r\n\r\n  switch (action.type) {\r\n\r\n    case CHANGE_MENU: {\r\n      const newState: NavMenuReducer[] = JSON.parse(JSON.stringify(state));\r\n      newState.forEach((item, index) => {\r\n        item.isActive = false;\r\n        if (index === action.index) {\r\n          item.isActive = true;\r\n        }\r\n      });\r\n      return newState;\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default homeReducer;","import {\r\n  combineReducers\r\n} from 'redux';\r\nimport homeReducer from './home';\r\nimport navMenuReducer from './navMenu';\r\n\r\nconst reducers = {\r\n  homeReducer,\r\n  navMenuReducer\r\n}\r\n// 通过combineReducers把多个reducer进行合并\r\nconst rootReducers = combineReducers(reducers)\r\n\r\nexport default rootReducers;","export const CHANGE_MENU:string = 'CHANGE_MENU';\r\nexport type CHANGE_MENU = typeof CHANGE_MENU;\r\n","import {\r\n  createStore\r\n} from 'redux'\r\n\r\nimport reducer from './reducer/index'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { stateToProps, dispatchToProps } from '../../store/actions/navMenu';\r\nimport { NavMenuReducer } from '../../store/reducer/navMenu';\r\nimport './topNav.scss';\r\n\r\ninterface IProps {\r\n  navMenuList: NavMenuReducer[],\r\n  changeNavMenu: (index: number) => void,\r\n  isShow: boolean\r\n}\r\n\r\n/**\r\n * @param {NavMenuReducer[]} list 需要渲染的menu数组\r\n * @returns\r\n */\r\nfunction genMenu(list: NavMenuReducer[], changeNavMenu: (index: number) => void): JSX.Element[] {\r\n\r\n  return list.map((item, index) =>\r\n    <div\r\n      className={`menu ${item.isActive ? '_isMenuActive' : ''}`}\r\n      key={index}\r\n      onClick={() => {\r\n        changeNavMenu(index)\r\n      }}\r\n    >\r\n      {item.name}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst TopNav = (props: IProps): JSX.Element => {\r\n  const { navMenuList, changeNavMenu, isShow } = props;\r\n  return <div id='top_nav' className={isShow ? '' : 'isHide'}>\r\n    <div className='avatar_logo'></div>\r\n    <div className=\"nav_menu\">\r\n      {\r\n        genMenu(navMenuList, changeNavMenu)\r\n      }\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\nexport default connect(stateToProps, dispatchToProps)(TopNav);\r\n","import { CHANGE_MENU } from '../../actionType/index';\r\nimport { NavMenuReducer } from '../../reducer/navMenu'\r\n\r\nexport type ModifyAction = CHANGE_MENU;\r\n\r\ninterface State {\r\n  navMenuReducer: NavMenuReducer[]\r\n}\r\n\r\ninterface StateToProps {\r\n  navMenuList: NavMenuReducer[]\r\n}\r\n\r\ninterface DispatchToProps {\r\n  changeNavMenu: (index: number) => void\r\n}\r\n\r\nexport const stateToProps = (state: State): StateToProps => ({\r\n  navMenuList: state.navMenuReducer\r\n})\r\n\r\nexport const dispatchToProps = (dispatch: Function): DispatchToProps => (\r\n  {\r\n    changeNavMenu: (index: number): void => {\r\n      dispatch({\r\n        type: CHANGE_MENU,\r\n        index\r\n      })\r\n    },\r\n  }\r\n)","import React, { useState, useEffect } from 'react';\r\nimport './profile.scss';\r\n\r\ninterface IProp {\r\n  isColorWhite: boolean\r\n}\r\n\r\nconst Profile = (props: IProp): JSX.Element => {\r\n\r\n  const { isColorWhite } = props;\r\n\r\n  const [isProfileShow, setProfileShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setProfileShow(true)\r\n  }, [])\r\n\r\n  return <section id='profile' className={`${isProfileShow ? '' : 'profile-close'}`}>\r\n    <div className='profile_avatar'>\r\n      <div\r\n        className='arrow'\r\n        onClick={() => { setProfileShow(!isProfileShow) }}\r\n      ></div>\r\n      <div className='avatar'></div>\r\n    </div>\r\n    <div className={`profileInfo ${isColorWhite ? '_whiteInfo' : ''}`}>\r\n      <div className='name'>KNULP</div>\r\n      <div className='motto'>Doing is better than saying.</div>\r\n    </div>\r\n  </section>\r\n}\r\n\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Tooltip } from 'antd';\r\nimport { ContactList } from '../index';\r\nimport './contactIcon.scss';\r\n\r\ninterface IProp {\r\n  list: ContactList[]\r\n}\r\n\r\nconst ContactIcon = (props: IProp): JSX.Element => {\r\n  const { list } = props;\r\n  return <div className='icon-group'>\r\n    {\r\n      list.map((item,index) => {\r\n        if (item.src) {\r\n          return <a href={item.src} \r\n                    key={index}\r\n                    className={`contact_icon ${item.icon}`} \r\n                    target='_blank'\r\n                  ></a>\r\n        } else {\r\n          return <Tooltip key={index} placement=\"top\" title={item.info}>\r\n            <div className={`contact_icon ${item.icon}`}></div>\r\n          </Tooltip>\r\n        }\r\n      })\r\n    }\r\n  </div>\r\n}\r\n\r\nexport default ContactIcon;","import React from 'react'\r\nimport './banner.scss';\r\nimport Profile from './profile';\r\nimport ContactIcon from './contactIcon';\r\n\r\nexport interface ContactList {\r\n  name: string,\r\n  icon: string,\r\n  src?: string,\r\n  info?: string,\r\n}\r\n\r\ninterface IProp {\r\n  isColorWhite: boolean\r\n}\r\n\r\nconst Banner = (props: IProp): JSX.Element => {\r\n\r\n  const { isColorWhite } = props;\r\n\r\n  const list: ContactList[] = [\r\n    {\r\n      name: 'github',\r\n      icon: 'icon-github',\r\n      src: 'https://github.com/cangshudada'\r\n    },\r\n    {\r\n      name: '邮箱',\r\n      icon: 'icon-email',\r\n      info: '15342240569@163.com'\r\n    },\r\n    {\r\n      name: '手机',\r\n      icon: 'icon-phone',\r\n      info: '15342240569'\r\n    },\r\n    {\r\n      name: 'QQ',\r\n      icon: 'icon-qq',\r\n      info: '853883909'\r\n    },\r\n    {\r\n      name: 'wechat',\r\n      icon: 'icon-wechat',\r\n      info: 'varon853883909'\r\n    },\r\n  ]\r\n\r\n  return <div id='banner'>\r\n    <Profile isColorWhite={isColorWhite} />\r\n    <ContactIcon list={list} />\r\n    LESS IS MORE\r\n  </div>\r\n}\r\n\r\nexport default Banner;\r\n\r\n","import React from 'react';\r\nimport './aboutMe.scss';\r\n\r\n\r\ninterface Skill {\r\n  name: string,\r\n  className: string\r\n}\r\n\r\nconst skillList: Skill[] = [\r\n  {\r\n    name: 'typescript',\r\n    className: 'typescript'\r\n  }, {\r\n    name: 'react',\r\n    className: 'react'\r\n  }, {\r\n    name: 'redux',\r\n    className: 'redux'\r\n  }, {\r\n    name: 'vue',\r\n    className: 'vue'\r\n  }, {\r\n    name: 'pixi',\r\n    className: 'pixi'\r\n  }, {\r\n    name: 'electron',\r\n    className: 'electron'\r\n  }, {\r\n    name: '小程序',\r\n    className: 'minip'\r\n  }, {\r\n    name: 'gitbook',\r\n    className: 'gitbook'\r\n  }]\r\n\r\n\r\nconst AboutMe = (): JSX.Element => {\r\n\r\n  return <div id='aboutMe'>\r\n    <div className='mask'>关于我</div>\r\n    <div className='title'>ABOUT ME</div>\r\n    <div className='aboutMe'>\r\n      <span>杨启</span>\r\n      <span>前端工程师</span>\r\n      <span>24岁</span>\r\n    </div>\r\n    <div className='skillList'>\r\n      {\r\n        skillList.map((item, index) => (\r\n          <div key={index}>\r\n            <span className={`skillIcon ${item.className}`}></span>\r\n            <span>{item.name}</span>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default AboutMe;","import * as React from 'react';\r\nimport './project.scss'\r\n\r\nconst Project = (): JSX.Element => {\r\n  return <div id='project'>\r\n    <div className='title'>project experience</div>\r\n    <div className='cmappax'>\r\n      <div className='_title'>cmappax</div>\r\n      <div className='cmappax_img'>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n      <div className='cmappax_discription'>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Project;","import React from 'react';\r\nimport './content.scss';\r\nimport AboutMe from './aboutMe';\r\nimport Project from './project';\r\n\r\n\r\nconst Content = (): JSX.Element => {\r\n\r\n  return <div id='content'>\r\n    <AboutMe />\r\n    <Project />\r\n  </div>\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport './backTop.scss';\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\ninterface IProp {\r\n  isShow: boolean,\r\n  onClick: () => void\r\n}\r\n\r\nconst BackTop = (props: IProp) => {\r\n  const { isShow, onClick } = props;\r\n  return <CSSTransition\r\n    in={isShow}\r\n    timeout={500} \r\n    classNames='fade'\r\n    unmountOnExit\r\n  >\r\n    <div\r\n      id='back_top'\r\n      onClick={onClick}\r\n    >UP</div>\r\n  </CSSTransition>\r\n\r\n}\r\n\r\nexport default BackTop;","import React, { useState, useRef } from 'react';\r\nimport { scrollAnimate } from '../utils';\r\nimport './home.scss';\r\n\r\nimport TopNav from '../components/topNav';\r\nimport Banner from '../components/banner';\r\nimport Content from '../components/content';\r\nimport BackTop from '../components/backTop';\r\n\r\nconst App = (): JSX.Element => {\r\n  const home = useRef<HTMLInputElement>(null);\r\n  const [isBackTopShow, setBackTopShow] = useState(false);\r\n\r\n\r\n  // 滚动事件\r\n  const _onScrollEvent = () => {\r\n    if (home.current) {\r\n      if (home.current.scrollTop > 333) {\r\n        setBackTopShow(true)\r\n      } else {\r\n        setBackTopShow(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  // 回到顶部\r\n  const backTop = () => {\r\n    if (home.current) {\r\n      scrollAnimate(home.current, 0)\r\n    }\r\n  }\r\n\r\n  return <div id=\"home\" ref={home} onScrollCapture={() => _onScrollEvent()}>\r\n    {/* 回到顶部 */}\r\n    <BackTop\r\n      isShow={isBackTopShow}\r\n      onClick={backTop}\r\n    />\r\n    {/* 顶部菜单栏 */}\r\n    <TopNav isShow={!isBackTopShow} />\r\n    {/* banner图部分 */}\r\n    <Banner isColorWhite={!isBackTopShow} />\r\n    {/* 主题项目介绍等 */}\r\n    <Content />\r\n  </div>\r\n}\r\n\r\n\r\nexport default App;","export const scrollAnimate = (container: HTMLInputElement, position: number): void => {\r\n  //想要去的位置的动画\r\n  const scrollToptimer = setInterval(() => {\r\n    const top = container.scrollTop;\r\n    const speed = top / 4;\r\n    if (top !== position) {\r\n      container.scrollTop -= speed;\r\n    } else {\r\n      clearInterval(scrollToptimer);\r\n    }\r\n  }, 18);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from './store/index';\nimport Home from \"./views/home\";\nimport './assets/css/_common.scss';\nimport 'lib-flexible';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Home />\n  </Provider>, document.getElementById('root'));"],"sourceRoot":""}